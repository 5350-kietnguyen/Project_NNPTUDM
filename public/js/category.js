const apiUrl = 'http://localhost:3000/api/categories'; // API backend c·ªßa b·∫°n

// T·∫£i danh s√°ch lo·∫°i c√¥ng vi·ªác
function loadCategories() {
    fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
            const categoryTableBody = document.getElementById('categoryTableBody');
            categoryTableBody.innerHTML = ''; // X√≥a n·ªôi dung c≈©

            data.forEach((category, index) => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${category.name}</td>
                    <td>${category.description || 'Kh√¥ng c√≥ m√¥ t·∫£'}</td>
                    <td>
                        <button class="btn btn-sm" style="background:#f39c12; color:white;" onclick="editCategory('${category._id}')">S·ª≠a</button>
                        <button class="btn btn-sm" style="background:#e74c3c; color:white;" onclick="deleteCategory('${category._id}')">X√≥a</button>
                    </td>
                `;
                categoryTableBody.appendChild(row);
            });
        });
}

// Th√™m lo·∫°i c√¥ng vi·ªác
document.getElementById('addCategoryForm').addEventListener('submit', function (e) {
    e.preventDefault();

    const categoryName = document.getElementById('categoryName').value;
    const categoryDescription = document.getElementById('categoryDescription').value;

    fetch(apiUrl, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name: categoryName, description: categoryDescription })
    })
    .then(response => response.json())
    .then(data => {
        alert('‚úÖ Lo·∫°i c√¥ng vi·ªác ƒë√£ ƒë∆∞·ª£c th√™m!');
        closeModal('addCategoryModal');
        loadCategories();
        this.reset(); // Reset form
    });
});

// C·∫≠p nh·∫≠t lo·∫°i c√¥ng vi·ªác
document.getElementById('editCategoryForm').addEventListener('submit', function (e) {
    e.preventDefault();

    const categoryId = document.getElementById('editCategoryId').value;
    const categoryName = document.getElementById('editCategoryName').value;
    const categoryDescription = document.getElementById('editCategoryDescription').value;

    fetch(`${apiUrl}/${categoryId}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name: categoryName, description: categoryDescription })
    })
    .then(response => response.json())
    .then(data => {
        alert('‚úÖ Lo·∫°i c√¥ng vi·ªác ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t!');
        closeModal('editCategoryModal');
        loadCategories();
    });
});

// M·ªü modal ch·ªânh s·ª≠a
function editCategory(id) {
    fetch(`${apiUrl}/${id}`)
        .then(response => response.json())
        .then(data => {
            document.getElementById('editCategoryId').value = data._id;
            document.getElementById('editCategoryName').value = data.name;
            document.getElementById('editCategoryDescription').value = data.description || '';
            openModal('editCategoryModal');
        });
}

// X√≥a lo·∫°i c√¥ng vi·ªác
function deleteCategory(id) {
    if (confirm('‚ùó B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a lo·∫°i c√¥ng vi·ªác n√†y?')) {
        fetch(`${apiUrl}/${id}`, { method: 'DELETE' })
            .then(response => response.json())
            .then(data => {
                alert('üóëÔ∏è ƒê√£ x√≥a lo·∫°i c√¥ng vi·ªác!');
                loadCategories();
            });
    }
}

// Hi·ªÉn th·ªã modal
function openModal(id) {
    document.getElementById(id).classList.add("active");
}

// ·∫®n modal
function closeModal(id) {
    document.getElementById(id).classList.remove("active");
}

// T·ª± ƒë·ªông t·∫£i khi trang load
window.onload = loadCategories;
